# Load zsh theme
source $HOME/dotfiles/zsh/shell-theme.zsh

# Load sane VISUAL mode for zsh vi mode
source $HOME/dotfiles/zsh/zsh-vimode-visual.zsh
#
# Load environment-specific zsh config file
source $HOME/dotfiles/zsh/env.zsh

# Define the plugins
plugins=(fzf)

# Base16 Shell
BASE16_SHELL="$HOME/dotfiles/zsh/oceanic-next.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

############################################
# Vi-mode related commands
############################################
# Vi-key mode
bindkey -v

# Rebinds entering vi-mode to Ctrl-c and interrupt to ^P
bindkey '^c' vi-cmd-mode
stty intr '^P'

# Vi-like history search
bindkey -M vicmd '/' vi-history-search-backward

# Bind beginning/end of line movements to , and - in vim mode
# This mimics the behaviour in vim
bindkey -M vicmd ',' beginning-of-line
bindkey -M vicmd '\-' end-of-line
bindkey -M vivis ','  vi-visual-bol
bindkey -M vivis '\-' vi-visual-eol

# Bind 'kill word' (delete the currently written work) with Ctr-w
bindkey '^w' backward-kill-word

# Allow backspace to work like normal
bindkey '^?' backward-delete-char

# Change default editor to nvim
export EDITOR='nvim'

# Do not wait for multi-char sequence commands
export KEYTIMEOUT=1

# Equate vi mode yank with system clipboard copy
function vi-yank-pbcopy {
  zle vi-yank
}

# Rebind vi mode yank to system clipboard copy
zle -N vi-yank-pbcopy
bindkey -M vicmd 'y' vi-yank-pbcopy

# Equate vi mode paste with system clipboard paste
function vi-paste-pbpaste {
  to_paste=$(pbpaste)
  # Insert system clipboard contents at cursor
  LBUFFER="$LBUFFER${RBUFFER:0:1}"
  RBUFFER="$to_paste${RBUFFER:1:${#RBUFFER}}"
  # Move cursor to mimic vim paste behaviour
  CURSOR="$(($CURSOR + ${#to_paste}))"
}

# Rebind vi mode paste to system clipboard paste
zle -N vi-paste-pbpaste
bindkey -M vicmd 'p' vi-paste-pbpaste

########################################
# fzf + ag configuration
########################################

# Key bindings
read -r fzf_version rest_of_string <<<"$(fzf --version)"
source "/opt/homebrew/Cellar/fzf/${fzf_version}/shell/key-bindings.zsh"
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --bind 'tab:down,shift-tab:up'"

########################################
# General zsh settings
########################################

# Allow changing directories without using cd
setopt auto_cd

# Allow reversed autocompletion cycling with shift-tab
bindkey '^[[Z' reverse-menu-complete

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
 
# If non-printable characters are present, print them as-is
alias tree='tree -N'

# Alias for nvim 
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
fi

# Set infinite shell history
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000000
SAVEHIST=10000000

# Share history between terminal sessions
setopt inc_append_history
setopt share_history

# Ignore duplicate entries in history
setopt hist_ignore_dups

# Activate tab autocompletion
autoload -U compinit && compinit

# Color CLI output by filetype
export LSCOLORS=exfxcxdxbxegedabagacad; # It is the default value on OSX, so this line can be omitted
export LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43;" # It is the default value on OSX, so this line can be omitted

# Color tab autocomplete suggestions
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

# Highlight currently selected tab autocomplete suggestion
zstyle ':completion:*' menu select

# Enable CLI output coloration
export CLICOLOR=1;
